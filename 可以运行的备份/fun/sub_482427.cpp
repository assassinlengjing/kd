#include "sub.h" 
int sub_482427(void* thisx)
{
    int v2; // eax
    int v3; // eax
    int v4; // eax
    int v5; // eax
    int v6; // eax
    int v8; // [esp+4h] [ebp-8h]

    if (!sub_4822EC((int)thisx, 6u))
        return 0;
    v2 = sub_4828CD((int)thisx, 0);
    *(_BYTE*)(v2 + 10) = 2;
    *(_BYTE*)(v2 + 6) = 0;
    *(_WORD*)(v2 + 8) = 19;
    *(_BYTE*)(v2 + 52) = 2;
    *(_WORD*)v2 = 14;
    *(_WORD*)(v2 + 2) = 0;
    *(_WORD*)(v2 + 4) = 1;
    *(_BYTE*)(v2 + 11) = 21;
    *(_DWORD*)(v2 + 20) = 300;
    *(_BYTE*)(v2 + 12) = 0;
    *(_DWORD*)(v2 + 24) = 0;
    *(_BYTE*)(v2 + 13) = 11;
    *(_DWORD*)(v2 + 28) = -550;
    *(_BYTE*)(v2 + 14) = 11;
    *(_DWORD*)(v2 + 32) = 0;
    *(_BYTE*)(v2 + 15) = 0;
    *(_DWORD*)(v2 + 36) = 0;
    *(_BYTE*)(v2 + 16) = 11;
    *(_DWORD*)(v2 + 40) = 30;
    *(_DWORD*)(v2 + 44) = 0;
    *(_DWORD*)(v2 + 48) = 0;
    v3 = sub_4828CD((int)thisx, 1);
    *(_BYTE*)(v3 + 10) = 1;
    *(_BYTE*)(v3 + 6) = 0;
    *(_WORD*)(v3 + 8) = 14;
    *(_BYTE*)(v3 + 52) = 5;
    *(_WORD*)v3 = 40;
    *(_WORD*)(v3 + 2) = 0;
    *(_WORD*)(v3 + 4) = 1;
    *(_BYTE*)(v3 + 11) = 42;
    *(_DWORD*)(v3 + 20) = 100;
    *(_BYTE*)(v3 + 12) = 0;
    *(_DWORD*)(v3 + 24) = 0;
    *(_BYTE*)(v3 + 13) = 11;
    *(_DWORD*)(v3 + 28) = -500;
    *(_BYTE*)(v3 + 14) = 11;
    *(_DWORD*)(v3 + 32) = 0;
    *(_BYTE*)(v3 + 15) = 0;
    *(_DWORD*)(v3 + 36) = 0;
    *(_BYTE*)(v3 + 16) = 11;
    *(_DWORD*)(v3 + 40) = 30;
    *(_DWORD*)(v3 + 44) = 300;
    *(_DWORD*)(v3 + 48) = 0;
    v4 = sub_4828CD((int)thisx, 2);
    *(_BYTE*)(v4 + 10) = 1;
    *(_BYTE*)(v4 + 6) = 0;
    *(_WORD*)(v4 + 8) = 14;
    *(_BYTE*)(v4 + 52) = 9;
    *(_WORD*)v4 = 40;
    *(_WORD*)(v4 + 2) = 0;
    *(_WORD*)(v4 + 4) = 1;
    *(_BYTE*)(v4 + 11) = 42;
    *(_DWORD*)(v4 + 20) = 100;
    *(_BYTE*)(v4 + 12) = 0;
    *(_DWORD*)(v4 + 24) = 0;
    *(_BYTE*)(v4 + 13) = 11;
    *(_DWORD*)(v4 + 28) = -500;
    *(_BYTE*)(v4 + 14) = 11;
    *(_DWORD*)(v4 + 32) = 0;
    *(_BYTE*)(v4 + 15) = 0;
    *(_DWORD*)(v4 + 36) = 0;
    *(_BYTE*)(v4 + 16) = 11;
    *(_DWORD*)(v4 + 40) = 30;
    *(_DWORD*)(v4 + 44) = 300;
    *(_DWORD*)(v4 + 48) = 0;
    v5 = sub_4828CD((int)thisx, 3);
    *(_BYTE*)(v5 + 10) = 1;
    *(_BYTE*)(v5 + 6) = 0;
    *(_WORD*)(v5 + 8) = 19;
    *(_BYTE*)(v5 + 52) = 3;
    *(_WORD*)v5 = 9;
    *(_WORD*)(v5 + 2) = 0;
    *(_WORD*)(v5 + 4) = 1;
    *(_BYTE*)(v5 + 11) = 21;
    *(_DWORD*)(v5 + 20) = 400;
    *(_BYTE*)(v5 + 12) = 0;
    *(_DWORD*)(v5 + 24) = 0;
    *(_BYTE*)(v5 + 13) = 11;
    *(_DWORD*)(v5 + 28) = -700;
    *(_BYTE*)(v5 + 14) = 11;
    *(_DWORD*)(v5 + 32) = 0;
    *(_BYTE*)(v5 + 15) = 0;
    *(_DWORD*)(v5 + 36) = 0;
    *(_BYTE*)(v5 + 16) = 11;
    *(_DWORD*)(v5 + 40) = 30;
    *(_DWORD*)(v5 + 44) = 0;
    *(_DWORD*)(v5 + 48) = 0;
    v8 = sub_4828CD((int)thisx, 4);
    *(_BYTE*)(v8 + 10) = 1;
    *(_BYTE*)(v8 + 6) = 0;
    *(_WORD*)(v8 + 8) = 19;
    *(_BYTE*)(v8 + 52) = 3;
    *(_WORD*)v8 = 9;
    *(_WORD*)(v8 + 2) = 0;
    *(_WORD*)(v8 + 4) = 1;
    *(_BYTE*)(v8 + 11) = 0;
    *(_DWORD*)(v8 + 20) = 0;
    *(_BYTE*)(v8 + 12) = 11;
    *(_DWORD*)(v8 + 24) = 100;
    *(_BYTE*)(v8 + 13) = 11;
    *(_DWORD*)(v8 + 28) = -500;
    *(_BYTE*)(v8 + 14) = 11;
    *(_DWORD*)(v8 + 32) = 0;
    *(_BYTE*)(v8 + 15) = 0;
    *(_DWORD*)(v8 + 36) = 0;
    *(_BYTE*)(v8 + 16) = 11;
    *(_DWORD*)(v8 + 40) = 30;
    *(_DWORD*)(v8 + 44) = 0;
    *(_DWORD*)(v8 + 48) = 0;
    v6 = sub_4828CD((int)thisx, 5);
    *(_BYTE*)(v6 + 10) = 1;
    *(_BYTE*)(v6 + 6) = 0;
    *(_WORD*)(v6 + 8) = 19;
    *(_BYTE*)(v6 + 52) = 3;
    *(_WORD*)v6 = 9;
    *(_WORD*)(v6 + 2) = 0;
    *(_WORD*)(v6 + 4) = 1;
    *(_BYTE*)(v6 + 11) = 21;
    *(_DWORD*)(v6 + 20) = 200;
    *(_BYTE*)(v6 + 12) = 0;
    *(_DWORD*)(v6 + 24) = 0;
    *(_BYTE*)(v6 + 13) = 11;
    *(_DWORD*)(v6 + 28) = -500;
    *(_BYTE*)(v6 + 14) = 11;
    *(_DWORD*)(v6 + 32) = 0;
    *(_BYTE*)(v6 + 15) = 0;
    *(_DWORD*)(v6 + 36) = 0;
    *(_BYTE*)(v6 + 16) = 11;
    *(_DWORD*)(v6 + 40) = 30;
    *(_DWORD*)(v6 + 44) = 0;
    *(_DWORD*)(v6 + 48) = 0;
    return 1;
}